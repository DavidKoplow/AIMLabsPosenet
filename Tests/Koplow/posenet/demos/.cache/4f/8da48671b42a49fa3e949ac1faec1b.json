{"id":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","dependencies":[{"name":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\package.json","includedInParent":true,"mtime":1602366268566},{"name":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1602366268296},{"name":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\package.json","includedInParent":true,"mtime":1602953523590},{"name":"../keypoints","loc":{"line":19,"column":26},"parent":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\multi_pose\\decode_pose.js","resolved":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\keypoints.js"},{"name":"./util","loc":{"line":21,"column":21},"parent":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\multi_pose\\decode_pose.js","resolved":"C:\\Users\\dkopl\\Desktop\\AIMLabsPosenet\\AIMLabsPosenet\\Tests\\Koplow\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\multi_pose\\util.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar keypoints_1 = require(\"../keypoints\");\r\nvar util_1 = require(\"./util\");\r\nvar util_2 = require(\"./util\");\r\nvar parentChildrenTuples = keypoints_1.poseChain.map(function (_a) {\r\n    var parentJoinName = _a[0], childJoinName = _a[1];\r\n    return ([keypoints_1.partIds[parentJoinName], keypoints_1.partIds[childJoinName]]);\r\n});\r\nvar parentToChildEdges = parentChildrenTuples.map(function (_a) {\r\n    var childJointId = _a[1];\r\n    return childJointId;\r\n});\r\nvar childToParentEdges = parentChildrenTuples.map(function (_a) {\r\n    var parentJointId = _a[0];\r\n    return parentJointId;\r\n});\r\nfunction getDisplacement(edgeId, point, displacements) {\r\n    var numEdges = displacements.shape[2] / 2;\r\n    return {\r\n        y: displacements.get(point.y, point.x, edgeId),\r\n        x: displacements.get(point.y, point.x, numEdges + edgeId)\r\n    };\r\n}\r\nfunction getStridedIndexNearPoint(point, outputStride, height, width) {\r\n    return {\r\n        y: util_1.clamp(Math.round(point.y / outputStride), 0, height - 1),\r\n        x: util_1.clamp(Math.round(point.x / outputStride), 0, width - 1)\r\n    };\r\n}\r\n/**\r\n * We get a new keypoint along the `edgeId` for the pose instance, assuming\r\n * that the position of the `idSource` part is already known. For this, we\r\n * follow the displacement vector from the source to target part (stored in\r\n * the `i`-t channel of the displacement tensor). The displaced keypoint\r\n * vector is refined using the offset vector by `offsetRefineStep` times.\r\n */\r\nfunction traverseToTargetKeypoint(edgeId, sourceKeypoint, targetKeypointId, scoresBuffer, offsets, outputStride, displacements, offsetRefineStep) {\r\n    if (offsetRefineStep === void 0) { offsetRefineStep = 2; }\r\n    var _a = scoresBuffer.shape, height = _a[0], width = _a[1];\r\n    // Nearest neighbor interpolation for the source->target displacements.\r\n    var sourceKeypointIndices = getStridedIndexNearPoint(sourceKeypoint.position, outputStride, height, width);\r\n    var displacement = getDisplacement(edgeId, sourceKeypointIndices, displacements);\r\n    var displacedPoint = util_2.addVectors(sourceKeypoint.position, displacement);\r\n    var targetKeypoint = displacedPoint;\r\n    for (var i = 0; i < offsetRefineStep; i++) {\r\n        var targetKeypointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n        var offsetPoint = util_1.getOffsetPoint(targetKeypointIndices.y, targetKeypointIndices.x, targetKeypointId, offsets);\r\n        targetKeypoint = util_2.addVectors({\r\n            x: targetKeypointIndices.x * outputStride,\r\n            y: targetKeypointIndices.y * outputStride\r\n        }, { x: offsetPoint.x, y: offsetPoint.y });\r\n    }\r\n    var targetKeyPointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n    var score = scoresBuffer.get(targetKeyPointIndices.y, targetKeyPointIndices.x, targetKeypointId);\r\n    return { position: targetKeypoint, part: keypoints_1.partNames[targetKeypointId], score: score };\r\n}\r\n/**\r\n * Follows the displacement fields to decode the full pose of the object\r\n * instance given the position of a part that acts as root.\r\n *\r\n * @return An array of decoded keypoints and their scores for a single pose\r\n */\r\nfunction decodePose(root, scores, offsets, outputStride, displacementsFwd, displacementsBwd) {\r\n    var numParts = scores.shape[2];\r\n    var numEdges = parentToChildEdges.length;\r\n    var instanceKeypoints = new Array(numParts);\r\n    // Start a new detection instance at the position of the root.\r\n    var rootPart = root.part, rootScore = root.score;\r\n    var rootPoint = util_2.getImageCoords(rootPart, outputStride, offsets);\r\n    instanceKeypoints[rootPart.id] = {\r\n        score: rootScore,\r\n        part: keypoints_1.partNames[rootPart.id],\r\n        position: rootPoint\r\n    };\r\n    // Decode the part positions upwards in the tree, following the backward\r\n    // displacements.\r\n    for (var edge = numEdges - 1; edge >= 0; --edge) {\r\n        var sourceKeypointId = parentToChildEdges[edge];\r\n        var targetKeypointId = childToParentEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsBwd);\r\n        }\r\n    }\r\n    // Decode the part positions downwards in the tree, following the forward\r\n    // displacements.\r\n    for (var edge = 0; edge < numEdges; ++edge) {\r\n        var sourceKeypointId = childToParentEdges[edge];\r\n        var targetKeypointId = parentToChildEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsFwd);\r\n        }\r\n    }\r\n    return instanceKeypoints;\r\n}\r\nexports.decodePose = decodePose;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"node_modules/@tensorflow-models/posenet/dist/multi_pose/decode_pose.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar keypoints_1 = require(\"../keypoints\");\r\nvar util_1 = require(\"./util\");\r\nvar util_2 = require(\"./util\");\r\nvar parentChildrenTuples = keypoints_1.poseChain.map(function (_a) {\r\n    var parentJoinName = _a[0], childJoinName = _a[1];\r\n    return ([keypoints_1.partIds[parentJoinName], keypoints_1.partIds[childJoinName]]);\r\n});\r\nvar parentToChildEdges = parentChildrenTuples.map(function (_a) {\r\n    var childJointId = _a[1];\r\n    return childJointId;\r\n});\r\nvar childToParentEdges = parentChildrenTuples.map(function (_a) {\r\n    var parentJointId = _a[0];\r\n    return parentJointId;\r\n});\r\nfunction getDisplacement(edgeId, point, displacements) {\r\n    var numEdges = displacements.shape[2] / 2;\r\n    return {\r\n        y: displacements.get(point.y, point.x, edgeId),\r\n        x: displacements.get(point.y, point.x, numEdges + edgeId)\r\n    };\r\n}\r\nfunction getStridedIndexNearPoint(point, outputStride, height, width) {\r\n    return {\r\n        y: util_1.clamp(Math.round(point.y / outputStride), 0, height - 1),\r\n        x: util_1.clamp(Math.round(point.x / outputStride), 0, width - 1)\r\n    };\r\n}\r\n/**\r\n * We get a new keypoint along the `edgeId` for the pose instance, assuming\r\n * that the position of the `idSource` part is already known. For this, we\r\n * follow the displacement vector from the source to target part (stored in\r\n * the `i`-t channel of the displacement tensor). The displaced keypoint\r\n * vector is refined using the offset vector by `offsetRefineStep` times.\r\n */\r\nfunction traverseToTargetKeypoint(edgeId, sourceKeypoint, targetKeypointId, scoresBuffer, offsets, outputStride, displacements, offsetRefineStep) {\r\n    if (offsetRefineStep === void 0) { offsetRefineStep = 2; }\r\n    var _a = scoresBuffer.shape, height = _a[0], width = _a[1];\r\n    // Nearest neighbor interpolation for the source->target displacements.\r\n    var sourceKeypointIndices = getStridedIndexNearPoint(sourceKeypoint.position, outputStride, height, width);\r\n    var displacement = getDisplacement(edgeId, sourceKeypointIndices, displacements);\r\n    var displacedPoint = util_2.addVectors(sourceKeypoint.position, displacement);\r\n    var targetKeypoint = displacedPoint;\r\n    for (var i = 0; i < offsetRefineStep; i++) {\r\n        var targetKeypointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n        var offsetPoint = util_1.getOffsetPoint(targetKeypointIndices.y, targetKeypointIndices.x, targetKeypointId, offsets);\r\n        targetKeypoint = util_2.addVectors({\r\n            x: targetKeypointIndices.x * outputStride,\r\n            y: targetKeypointIndices.y * outputStride\r\n        }, { x: offsetPoint.x, y: offsetPoint.y });\r\n    }\r\n    var targetKeyPointIndices = getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\r\n    var score = scoresBuffer.get(targetKeyPointIndices.y, targetKeyPointIndices.x, targetKeypointId);\r\n    return { position: targetKeypoint, part: keypoints_1.partNames[targetKeypointId], score: score };\r\n}\r\n/**\r\n * Follows the displacement fields to decode the full pose of the object\r\n * instance given the position of a part that acts as root.\r\n *\r\n * @return An array of decoded keypoints and their scores for a single pose\r\n */\r\nfunction decodePose(root, scores, offsets, outputStride, displacementsFwd, displacementsBwd) {\r\n    var numParts = scores.shape[2];\r\n    var numEdges = parentToChildEdges.length;\r\n    var instanceKeypoints = new Array(numParts);\r\n    // Start a new detection instance at the position of the root.\r\n    var rootPart = root.part, rootScore = root.score;\r\n    var rootPoint = util_2.getImageCoords(rootPart, outputStride, offsets);\r\n    instanceKeypoints[rootPart.id] = {\r\n        score: rootScore,\r\n        part: keypoints_1.partNames[rootPart.id],\r\n        position: rootPoint\r\n    };\r\n    // Decode the part positions upwards in the tree, following the backward\r\n    // displacements.\r\n    for (var edge = numEdges - 1; edge >= 0; --edge) {\r\n        var sourceKeypointId = parentToChildEdges[edge];\r\n        var targetKeypointId = childToParentEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsBwd);\r\n        }\r\n    }\r\n    // Decode the part positions downwards in the tree, following the forward\r\n    // displacements.\r\n    for (var edge = 0; edge < numEdges; ++edge) {\r\n        var sourceKeypointId = childToParentEdges[edge];\r\n        var targetKeypointId = parentToChildEdges[edge];\r\n        if (instanceKeypoints[sourceKeypointId] &&\r\n            !instanceKeypoints[targetKeypointId]) {\r\n            instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores, offsets, outputStride, displacementsFwd);\r\n        }\r\n    }\r\n    return instanceKeypoints;\r\n}\r\nexports.decodePose = decodePose;\r\n"},"lineCount":115}},"error":null,"hash":"196a64e1b04d5ec6de2016221a33fd2e","cacheData":{"env":{}}}