{"id":"node_modules/@tensorflow-models/posenet/dist/base_model.js","dependencies":[{"name":"C:\\Users\\dkopl\\Downloads\\tfjs-models-master\\tfjs-models-master\\posenet\\demos\\package.json","includedInParent":true,"mtime":1602366268566},{"name":"C:\\Users\\dkopl\\Downloads\\tfjs-models-master\\tfjs-models-master\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1602366268296},{"name":"C:\\Users\\dkopl\\Downloads\\tfjs-models-master\\tfjs-models-master\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\package.json","includedInParent":true,"mtime":1602951034221},{"name":"@tensorflow/tfjs-core","loc":{"line":19,"column":17},"parent":"C:\\Users\\dkopl\\Downloads\\tfjs-models-master\\tfjs-models-master\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\dist\\base_model.js","resolved":"C:\\Users\\dkopl\\Downloads\\tfjs-models-master\\tfjs-models-master\\posenet\\demos\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\n/**\r\n * PoseNet supports using various convolution neural network models\r\n * (e.g. ResNet and MobileNetV1) as its underlying base model.\r\n * The following BaseModel interface defines a unified interface for\r\n * creating such PoseNet base models. Currently both MobileNet (in\r\n * ./mobilenet.ts) and ResNet (in ./resnet.ts) implements the BaseModel\r\n * interface. New base models that conform to the BaseModel interface can be\r\n * added to PoseNet.\r\n */\r\nvar BaseModel = /** @class */ (function () {\r\n    function BaseModel(model, outputStride) {\r\n        this.model = model;\r\n        this.outputStride = outputStride;\r\n        var inputShape = this.model.inputs[0].shape;\r\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\" + inputShape[1] + \", \" + inputShape[2] + \"] \" +\r\n            \"must both be equal to or -1\"; });\r\n    }\r\n    /**\r\n     * Predicts intermediate Tensor representations.\r\n     *\r\n     * @param input The input RGB image of the base model.\r\n     * A Tensor of shape: [`inputResolution`, `inputResolution`, 3].\r\n     *\r\n     * @return A dictionary of base model's intermediate predictions.\r\n     * The returned dictionary should contains the following elements:\r\n     * heatmapScores: A Tensor3D that represents the heatmapScores.\r\n     * offsets: A Tensor3D that represents the offsets.\r\n     * displacementFwd: A Tensor3D that represents the forward displacement.\r\n     * displacementBwd: A Tensor3D that represents the backward displacement.\r\n     */\r\n    BaseModel.prototype.predict = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var asFloat = _this.preprocessInput(input.toFloat());\r\n            var asBatch = asFloat.expandDims(0);\r\n            var results = _this.model.predict(asBatch);\r\n            var results3d = results.map(function (y) { return y.squeeze([0]); });\r\n            var namedResults = _this.nameOutputResults(results3d);\r\n            return {\r\n                heatmapScores: namedResults.heatmap.sigmoid(),\r\n                offsets: namedResults.offsets,\r\n                displacementFwd: namedResults.displacementFwd,\r\n                displacementBwd: namedResults.displacementBwd\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Releases the CPU and GPU memory allocated by the model.\r\n     */\r\n    BaseModel.prototype.dispose = function () {\r\n        this.model.dispose();\r\n    };\r\n    return BaseModel;\r\n}());\r\nexports.BaseModel = BaseModel;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow-models/posenet/dist/base_model.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/@tensorflow-models/posenet/dist/base_model.js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\n/**\r\n * PoseNet supports using various convolution neural network models\r\n * (e.g. ResNet and MobileNetV1) as its underlying base model.\r\n * The following BaseModel interface defines a unified interface for\r\n * creating such PoseNet base models. Currently both MobileNet (in\r\n * ./mobilenet.ts) and ResNet (in ./resnet.ts) implements the BaseModel\r\n * interface. New base models that conform to the BaseModel interface can be\r\n * added to PoseNet.\r\n */\r\nvar BaseModel = /** @class */ (function () {\r\n    function BaseModel(model, outputStride) {\r\n        this.model = model;\r\n        this.outputStride = outputStride;\r\n        var inputShape = this.model.inputs[0].shape;\r\n        tf.util.assert((inputShape[1] === -1) && (inputShape[2] === -1), function () { return \"Input shape [\" + inputShape[1] + \", \" + inputShape[2] + \"] \" +\r\n            \"must both be equal to or -1\"; });\r\n    }\r\n    /**\r\n     * Predicts intermediate Tensor representations.\r\n     *\r\n     * @param input The input RGB image of the base model.\r\n     * A Tensor of shape: [`inputResolution`, `inputResolution`, 3].\r\n     *\r\n     * @return A dictionary of base model's intermediate predictions.\r\n     * The returned dictionary should contains the following elements:\r\n     * heatmapScores: A Tensor3D that represents the heatmapScores.\r\n     * offsets: A Tensor3D that represents the offsets.\r\n     * displacementFwd: A Tensor3D that represents the forward displacement.\r\n     * displacementBwd: A Tensor3D that represents the backward displacement.\r\n     */\r\n    BaseModel.prototype.predict = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var asFloat = _this.preprocessInput(input.toFloat());\r\n            var asBatch = asFloat.expandDims(0);\r\n            var results = _this.model.predict(asBatch);\r\n            var results3d = results.map(function (y) { return y.squeeze([0]); });\r\n            var namedResults = _this.nameOutputResults(results3d);\r\n            return {\r\n                heatmapScores: namedResults.heatmap.sigmoid(),\r\n                offsets: namedResults.offsets,\r\n                displacementFwd: namedResults.displacementFwd,\r\n                displacementBwd: namedResults.displacementBwd\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Releases the CPU and GPU memory allocated by the model.\r\n     */\r\n    BaseModel.prototype.dispose = function () {\r\n        this.model.dispose();\r\n    };\r\n    return BaseModel;\r\n}());\r\nexports.BaseModel = BaseModel;\r\n"},"lineCount":75}},"error":null,"hash":"2a4eb265033d75a71e0a43639db57795","cacheData":{"env":{}}}